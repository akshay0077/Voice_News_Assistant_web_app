{"ast":null,"code":"var _jsxFileName = \"/home/lubos/Downloads/Reactjs/reactapp/project/News_Alan_React/news_alan/src/components/Modal/Modal.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Typography, Divider, Chip, TextField, Button } from '@material-ui/core';\nimport SimpleModal from '@material-ui/core/Modal';\nimport emailjs from 'emailjs-com';\nimport useStyles from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Modal = ({\n  isOpen,\n  setIsOpen,\n  showFeedback\n}) => {\n  _s();\n\n  const classes = useStyles();\n  let body;\n\n  const sendEmail = e => {\n    e.preventDefault();\n    emailjs.sendForm('gmail', 'alan_ai', e.target, 'user_dhVImkgxaL27bxQ8pLPQ5').then(result => {\n      console.log(result.text);\n    }, error => {\n      console.log(error.text);\n    });\n  };\n\n  if (isOpen && showFeedback) {\n    body = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.paper,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        children: \"Something went wrong? Send us some feedback\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.form,\n        onSubmit: sendEmail,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          name: \"name\",\n          label: \"Your name\",\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"email\",\n          type: \"email\",\n          label: \"Your email\",\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"feedback\",\n          multiline: true,\n          rows: 5,\n          helperText: \"Describe the problems that you've encontered.\",\n          label: \"Feedback\",\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"outlined\",\n          color: \"primary\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n  } else {\n    body = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.paper,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        children: \"Instructions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.infoContainer,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: \"News by Categories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.chipContainer,\n          children: ['Business', 'Entertainment', 'General', 'Health', 'Science', 'Sports', 'Technology'].map(category => /*#__PURE__*/_jsxDEV(Chip, {\n            label: category,\n            color: \"primary\",\n            className: classes.chip\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 155\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        className: classes.trySaying,\n        children: [\"Try saying: \\\"Give me the latest \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: /*#__PURE__*/_jsxDEV(\"em\", {\n            children: \"Business\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 112\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 104\n        }, this), \" news\\\"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.infoContainer,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: \"News by Terms\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.chipContainer,\n          children: [['Donald Trump', 'Bitcoin', 'PlayStation 5', 'Smartphones'].map(term => /*#__PURE__*/_jsxDEV(Chip, {\n            label: term,\n            color: \"primary\",\n            className: classes.chip\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 125\n          }, this)), /*#__PURE__*/_jsxDEV(Chip, {\n            label: \"...and more\",\n            className: classes.chip\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 189\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        className: classes.trySaying,\n        children: [\"Try saying: \\\"What's up with \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: /*#__PURE__*/_jsxDEV(\"em\", {\n            children: \"PlayStation 5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 113\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 105\n        }, this), \"\\\"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.infoContainer,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: \"News by Sources\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.chipContainer,\n          children: [['CNN', 'Wired', 'BBC News', 'Time', 'IGN', 'Buzzfeed', 'ABC News'].map(source => /*#__PURE__*/_jsxDEV(Chip, {\n            label: source,\n            color: \"primary\",\n            className: classes.chip\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 135\n          }, this)), /*#__PURE__*/_jsxDEV(Chip, {\n            label: \"...and more\",\n            className: classes.chip\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 201\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        className: classes.trySaying,\n        children: [\"Try saying: \\\"Give me the news from \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: /*#__PURE__*/_jsxDEV(\"em\", {\n            children: \"CNN\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 115\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 107\n        }, this), \"\\\"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(SimpleModal, {\n    open: isOpen,\n    onClose: () => setIsOpen(false),\n    children: body\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Modal, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Modal;\nexport default Modal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"sources":["/home/lubos/Downloads/Reactjs/reactapp/project/News_Alan_React/news_alan/src/components/Modal/Modal.js"],"names":["React","Typography","Divider","Chip","TextField","Button","SimpleModal","emailjs","useStyles","Modal","isOpen","setIsOpen","showFeedback","classes","body","sendEmail","e","preventDefault","sendForm","target","then","result","console","log","text","error","paper","form","infoContainer","chipContainer","map","category","chip","trySaying","term","source"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport { Typography, Divider, Chip, TextField, Button } from '@material-ui/core';\nimport SimpleModal from '@material-ui/core/Modal';\nimport emailjs from 'emailjs-com';\n\nimport useStyles from './styles';\n\nconst Modal = ({ isOpen, setIsOpen, showFeedback }) => {\n  const classes = useStyles();\n  let body;\n\n  const sendEmail = (e) => {\n    e.preventDefault();\n\n    emailjs.sendForm('gmail', 'alan_ai', e.target, 'user_dhVImkgxaL27bxQ8pLPQ5')\n      .then((result) => { console.log(result.text); }, (error) => { console.log(error.text); });\n  };\n\n  if (isOpen && showFeedback) {\n    body = (\n      <div className={classes.paper}>\n        <Typography variant=\"h3\">Something went wrong? Send us some feedback</Typography>\n        <br />\n        <form className={classes.form} onSubmit={sendEmail}>\n          <TextField name=\"name\" label=\"Your name\" variant=\"outlined\" />\n          <br />\n          <TextField name=\"email\" type=\"email\" label=\"Your email\" variant=\"outlined\" />\n          <br />\n          <TextField name=\"feedback\" multiline rows={5} helperText=\"Describe the problems that you've encontered.\" label=\"Feedback\" variant=\"outlined\" />\n          <br />\n          <Button type=\"submit\" variant=\"outlined\" color=\"primary\">Send</Button>\n        </form>\n      </div>\n    );\n  } else {\n    body = (\n      <div className={classes.paper}>\n        <Typography variant=\"h3\">Instructions</Typography>\n        <Divider />\n        <div className={classes.infoContainer}>\n          <Typography variant=\"h5\">News by Categories</Typography>\n          <div className={classes.chipContainer}>{['Business', 'Entertainment', 'General', 'Health', 'Science', 'Sports', 'Technology'].map((category) => <Chip label={category} color=\"primary\" className={classes.chip} />)}</div>\n        </div>\n        <Typography variant=\"body1\" className={classes.trySaying}>Try saying: &quot;Give me the latest <strong><em>Business</em></strong> news&quot;</Typography>\n        <Divider />\n        <div className={classes.infoContainer}>\n          <Typography variant=\"h5\">News by Terms</Typography>\n          <div className={classes.chipContainer}>{['Donald Trump', 'Bitcoin', 'PlayStation 5', 'Smartphones'].map((term) => <Chip label={term} color=\"primary\" className={classes.chip} />)}<Chip label=\"...and more\" className={classes.chip} /></div>\n        </div>\n        <Typography variant=\"body1\" className={classes.trySaying}>Try saying: &quot;What&apos;s up with <strong><em>PlayStation 5</em></strong>&quot;</Typography>\n        <Divider />\n        <div className={classes.infoContainer}>\n          <Typography variant=\"h5\">News by Sources</Typography>\n          <div className={classes.chipContainer}>{['CNN', 'Wired', 'BBC News', 'Time', 'IGN', 'Buzzfeed', 'ABC News'].map((source) => <Chip label={source} color=\"primary\" className={classes.chip} />)}<Chip label=\"...and more\" className={classes.chip} /></div>\n        </div>\n        <Typography variant=\"body1\" className={classes.trySaying}>Try saying: &quot;Give me the news from <strong><em>CNN</em></strong>&quot;</Typography>\n      </div>\n    );\n  }\n\n  return (\n    <SimpleModal open={isOpen} onClose={() => setIsOpen(false)}>\n      {body}\n    </SimpleModal>\n  );\n};\n\nexport default Modal;"]},"metadata":{},"sourceType":"module"}